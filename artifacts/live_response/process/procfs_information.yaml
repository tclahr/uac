version: 2.0
output_directory: /live_response/process
artifacts:
  -
    description: Collect current running processes information.
    supported_os: [aix, freebsd, linux, netbsd, netscaler, solaris]
    collector: command
    command: ls -l /proc/[0-9]*
    output_file: ls_-l_proc.txt

  # each operating system has its own particularities and artifacts available in /proc
  # to make this artifact easier to read and more organized, each operating system
  # will have its own section
  
  # aix
  -
    description: Collect running processes executable path.
    supported_os: [aix]
    collector: command
    command: ls -l /proc/[0-9]*/object/a.out
    output_file: running_processes_full_paths.txt
  -
    description: Collect the path to the current working directory of the process.
    supported_os: [aix]
    collector: command
    command: ls -l /proc/[0-9]*/cwd
    output_file: ls_-l_proc_pid_cwd.txt
  -
    description: Collect the list of files which the process has open.
    supported_os: [aix]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: ls -la /proc/%line%/fd
    output_directory: /live_response/process/proc/%line%
    output_file: fd.txt
  -
    description: Collect information about all file descriptors opened by a process.
    supported_os: [aix]
    collector: command
    condition: command_exists "procfiles"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: procfiles -n -c %line%
    output_directory: /live_response/process/proc/%line%
    output_file: procfiles.txt
  # aix: strings available
  -
    description: Collect running process information.
    supported_os: [aix]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/psinfo
    output_directory: /live_response/process/proc/%line%
    output_file: psinfo.txt
  -
    description: Collect status information about the process.
    supported_os: [aix]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt
  # aix: no strings available
  -
    description: Collect running process information.
    supported_os: [aix]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/psinfo
    output_directory: /live_response/process/proc/%line%
    output_file: psinfo.txt
  -
    description: Collect status information about the process.
    supported_os: [aix]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt
  
  # freebsd
  # some freebsd systems use profcs, some don't
  -
    description: Collect running processes executable path.
    supported_os: [freebsd]
    collector: command
    condition: ls /proc/$$
    command: ls -l /proc/[0-9]*/file
    output_file: running_processes_full_paths.txt
  -
    description: Collect running processes executable path.
    supported_os: [freebsd]
    collector: command
    condition: ! ls /proc/$$
    command: ps -axo args | grep ^/ | awk '{print $1}' | sort -u
    output_file: running_processes_full_paths.txt
  -
    description: Collect command line arguments for a process.
    supported_os: [freebsd]
    collector: command
    condition: ls /proc/$$
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/cmdline
    output_directory: /live_response/process/proc/%line%
    output_file: cmdline.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [freebsd]
    collector: command
    condition: ls /proc/$$
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/map
    output_directory: /live_response/process/proc/%line%
    output_file: map.txt
  -
    description: Collect status information about the process.
    supported_os: [freebsd]
    collector: command
    condition: ls /proc/$$
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt

  # linux
  -
    description: Collect running processes executable path.
    supported_os: [linux]
    collector: command
    command: ls -l /proc/[0-9]*/exe
    output_file: running_processes_full_paths.txt
  -
    description: Collect the path to the current working directory of the process.
    supported_os: [linux]
    collector: command
    command: ls -l /proc/[0-9]*/cwd
    output_file: ls_-l_proc_pid_cwd.txt
  -
    description: Collect the list of files which the process has open.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: ls -la /proc/%line%/fd
    output_directory: /live_response/process/proc/%line%
    output_file: fd.txt
  -
    description: Collect information about entries corresponding to memory-mapped files.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: ls -la /proc/%line%/map_files
    output_directory: /live_response/process/proc/%line%
    output_file: map_files.txt
  -
    description: Collect command line arguments for a process.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/cmdline
    output_directory: /live_response/process/proc/%line%
    output_file: cmdline.txt
  -
    description: Collect the list of child tasks of a process.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/task/%line%/children
    output_directory: /live_response/process/proc/%line%
    output_file: children.txt
  -
    description: Collect the command name associated with a process.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/comm
    output_directory: /live_response/process/proc/%line%
    output_file: comm.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/maps
    output_directory: /live_response/process/proc/%line%
    output_file: maps.txt
  -
    description: Collect the initial process' stack trace.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/stack
    output_directory: /live_response/process/proc/%line%
    output_file: stack.txt
  -
    description: Collect status information about the process.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt
  -
    description: Collect mount information
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/mounts
    output_directory: /live_response/process/proc/%line%
    output_file: mounts.txt
  -
    description: Display the list of UNIX sockets.
    supported_os: [linux]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/net/unix
    output_directory: /live_response/process/proc/%line%/net
    output_file: unix.txt
  # linux: strings available
  -
    description: Collect initial environment that was set when the process was started.
    supported_os: [linux]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/environ
    output_directory: /live_response/process/proc/%line%
    output_file: environ.txt
  # linux: no strings available
  -
    description: Collect initial environment that was set when the process was started.
    supported_os: [linux]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/environ
    output_directory: /live_response/process/proc/%line%
    output_file: environ.txt
  
  # macos
  -
    description: Collect running processes executable path.
    supported_os: [macos]
    collector: command
    command: ps -axo comm | grep ^/ | sort -u
    output_file: running_processes_full_paths.txt

  # netbsd
  -
    description: Collect running processes executable path.
    supported_os: [netbsd]
    collector: command
    command: ls -l /proc/[0-9]*/exe
    output_file: running_processes_full_paths.txt
  -
    description: Collect the path to the current working directory of the process.
    supported_os: [netbsd]
    collector: command
    command: ls -l /proc/[0-9]*/cwd
    output_file: ls_-l_proc_pid_cwd.txt
  -
    description: Collect the list of files which the process has open.
    supported_os: [netbsd]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: ls -la /proc/%line%/fd
    output_directory: /live_response/process/proc/%line%
    output_file: fd.txt
  -
    description: Collect command line arguments for a process.
    supported_os: [netbsd]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/cmdline
    output_directory: /live_response/process/proc/%line%
    output_file: cmdline.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [netbsd]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/map
    output_directory: /live_response/process/proc/%line%
    output_file: map.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [netbsd]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/maps
    output_directory: /live_response/process/proc/%line%
    output_file: maps.txt
  -
    description: Collect status information about the process.
    supported_os: [netbsd]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt
  # netbsd: strings available
  -
    description: Collect initial environment that was set when the process was started.
    supported_os: [netbsd]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/environ
    output_directory: /live_response/process/proc/%line%
    output_file: environ.txt
  # netbsd: no strings available
  -
    description: Collect initial environment that was set when the process was started.
    supported_os: [netbsd]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/environ
    output_directory: /live_response/process/proc/%line%
    output_file: environ.txt

  # netscaler
  -
    description: Collect running processes executable path.
    supported_os: [netscaler]
    collector: command
    command: ls -l /proc/[0-9]*/file
    output_file: running_processes_full_paths.txt
  -
    description: Collect command line arguments for a process.
    supported_os: [netscaler]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/cmdline
    output_directory: /live_response/process/proc/%line%
    output_file: cmdline.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [netscaler]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/map
    output_directory: /live_response/process/proc/%line%
    output_file: map.txt
  -
    description: Collect status information about the process.
    supported_os: [netscaler]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt

  # openbsd
  -
    description: Collect running processes executable path.
    supported_os: [openbsd]
    collector: command
    command: ps -axo args | grep ^/ | awk '{print $1}' | sort -u
    output_file: running_processes_full_paths.txt

  # solaris
  -
    description: Collect running processes executable path.
    supported_os: [solaris]
    collector: command
    command: ls -l /proc/[0-9]*/path/a.out
    output_file: running_processes_full_paths.txt
  -
    description: Collect the path to the current working directory of the process.
    supported_os: [solaris]
    collector: command
    command: ls -l /proc/[0-9]*/cwd
    output_file: ls_-l_proc_pid_cwd.txt
  -
    description: Collect the list of files which the process has open.
    supported_os: [solaris]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: ls -la /proc/%line%/fd
    output_directory: /live_response/process/proc/%line%
    output_file: fd.txt
  -
    description: Collect the list of files which the process has open.
    supported_os: [solaris]
    collector: command
    condition: command_exists "pfiles"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: pfiles -F %line%
    output_directory: /live_response/process/proc/%line%
    output_file: pfiles.txt
  -
    description: Collect command line arguments for a process.
    supported_os: [solaris]
    collector: command
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: cat /proc/%line%/cmdline
    output_directory: /live_response/process/proc/%line%
    output_file: cmdline.txt

  # solaris: strings available
  -
    description: Collect initial environment that was set when the process was started.
    supported_os: [solaris]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/environ
    output_directory: /live_response/process/proc/%line%
    output_file: environ.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [solaris]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/map
    output_directory: /live_response/process/proc/%line%
    output_file: map.txt
  -
    description: Collect running process information.
    supported_os: [solaris]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/psinfo
    output_directory: /live_response/process/proc/%line%
    output_file: psinfo.txt
  -
    description: Collect status information about the process.
    supported_os: [solaris]
    collector: command
    condition: command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: strings /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt
  
  # solaris: no strings available
  -
    description: Collect initial environment that was set when the process was started.
    supported_os: [solaris]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/environ
    output_directory: /live_response/process/proc/%line%
    output_file: environ.txt
  -
    description: Collect mapped memory regions and their access permissions.
    supported_os: [solaris]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/map
    output_directory: /live_response/process/proc/%line%
    output_file: map.txt
  -
    description: Collect running process information.
    supported_os: [solaris]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/psinfo
    output_directory: /live_response/process/proc/%line%
    output_file: psinfo.txt
  -
    description: Collect status information about the process.
    supported_os: [solaris]
    collector: command
    condition: ! command_exists "strings"
    foreach: for pid in /proc/[0-9]*; do echo ${pid} | sed -e 's:/proc/::'; done
    command: astrings /proc/%line%/status
    output_directory: /live_response/process/proc/%line%
    output_file: status.txt
    
